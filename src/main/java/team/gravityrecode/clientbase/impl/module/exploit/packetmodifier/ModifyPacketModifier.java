package team.gravityrecode.clientbase.impl.module.exploit.packetmodifier;

import com.google.common.collect.Lists;
import lombok.AllArgsConstructor;
import net.minecraft.network.play.client.*;
import team.gravityrecode.clientbase.api.eventBus.EventHandler;
import team.gravityrecode.clientbase.api.moduleBase.Module;
import team.gravityrecode.clientbase.impl.event.networking.PacketEvent;
import team.gravityrecode.clientbase.impl.module.exploit.PacketModifier;
import team.gravityrecode.clientbase.impl.property.*;
import team.gravityrecode.clientbase.impl.property.interfaces.INameable;
import team.gravityrecode.clientbase.impl.property.mode.Mode;

import java.util.ArrayList;

public class ModifyPacketModifier extends Mode {

    PacketModifier packetModifier = this.getOwner();

    private final MultipleBoolSetting packetsToModify = new MultipleBoolSetting(this.getOwner(), "Modified Packets", modifiedPackets());

    //c00 settings
    private final NumberSetting c00Key = new NumberSetting(this.getOwner(), "C00 Key", 0, -1000, 1000, 1,
            () -> packetsToModify.isSelected("C00"));
    //c0f settings
    private final NumberSetting c0fWindowID = new NumberSetting(this.getOwner(), "C0F Window ID", 0, -1000, 1000, 1,
            () -> packetsToModify.isSelected("C0F"));
    private final NumberSetting c0fUid = new NumberSetting(this.getOwner(), "C0F UID", 0, -1000, 1000, 1,
            () -> packetsToModify.isSelected("C0F"));
    private final BooleanSetting c0fAccepted = new BooleanSetting(this.getOwner(), "C0F Accepted", false,
            () -> packetsToModify.isSelected("C0F"));
    //c03/c04/c05/c06 settings
    private final EnumSetting<C03PacketType> c03PacketTypeEnumSetting = new EnumSetting<C03PacketType>(this.getOwner(), "C03 Packet Type",
            () -> packetsToModify.isSelected("C03"), C03PacketType.values());
    private final MultipleBoolSetting c03PacketsToModify = new MultipleBoolSetting(this.getOwner(), "C03 Packets To Modify",
            () -> packetsToModify.isSelected("C03"), c03Packets());
    private final BooleanSetting c03OnlyPlayerPos = new BooleanSetting(this.getOwner(), "C03 Only Player Pos", true,
            () -> packetsToModify.isSelected("C03"));
    
    //c03 x/y/z settings
    private final NumberSetting c03X = new NumberSetting(this.getOwner(), "C03-X", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03 && !c03OnlyPlayerPos.getValue());
    private final NumberSetting c03Y = new NumberSetting(this.getOwner(), "C03-Y", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03 && !c03OnlyPlayerPos.getValue());
    private final NumberSetting c03Z = new NumberSetting(this.getOwner(), "C03-Z", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03 && !c03OnlyPlayerPos.getValue());
    private final BooleanSetting c03OnlyPlayerLook = new BooleanSetting(this.getOwner(), "C03 Only Player Look", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03);
    private final NumberSetting c03Yaw = new NumberSetting(this.getOwner(), "C03-Yaw", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03 && !c03OnlyPlayerLook.getValue());
    private final NumberSetting c03Pitch = new NumberSetting(this.getOwner(), "C03-Pitch", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03 && !c03OnlyPlayerLook.getValue());
    private final BooleanSetting c03PlayerOnGround = new BooleanSetting(this.getOwner(), "C03 Player On Ground", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03);
    private final BooleanSetting c03OnGround = new BooleanSetting(this.getOwner(), "C03-OnGround", false,
            () -> packetsToModify.isSelected("C03")  && c03PacketTypeEnumSetting.getValue() == C03PacketType.C03 && !c03PlayerOnGround.getValue());
    //c04 x/y/z settings
    private final BooleanSetting c04OnlyPlayerPos = new BooleanSetting(this.getOwner(), "C04 Only Player Pos", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04);
    private final NumberSetting c04X = new NumberSetting(this.getOwner(), "C04-X", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04 && !c04OnlyPlayerPos.getValue());
    private final NumberSetting c04Y = new NumberSetting(this.getOwner(), "C04-Y", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04 && !c04OnlyPlayerPos.getValue());
    private final NumberSetting c04Z = new NumberSetting(this.getOwner(), "C04-Z", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04 && !c04OnlyPlayerPos.getValue());
    private final BooleanSetting c04OnlyPlayerLook = new BooleanSetting(this.getOwner(), "C04 Only Player Look", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04);
    private final NumberSetting c04Yaw = new NumberSetting(this.getOwner(), "C04-Yaw", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04 && !c04OnlyPlayerLook.getValue());
    private final NumberSetting c04Pitch = new NumberSetting(this.getOwner(), "C04-Pitch", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04 && !c04OnlyPlayerLook.getValue());
    private final BooleanSetting c04PlayerOnGround = new BooleanSetting(this.getOwner(), "C04 Player On Ground", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04);
    private final BooleanSetting c04OnGround = new BooleanSetting(this.getOwner(), "C04-OnGround", false,
            () -> packetsToModify.isSelected("C03")  && c03PacketTypeEnumSetting.getValue() == C03PacketType.C04 && !c04PlayerOnGround.getValue());
    //c05 x/y/z settings
    private final BooleanSetting c05OnlyPlayerPos = new BooleanSetting(this.getOwner(), "C05 Only Player Pos", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05);
    private final NumberSetting c05X = new NumberSetting(this.getOwner(), "C05-X", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05 && !c05OnlyPlayerPos.getValue());
    private final NumberSetting c05Y = new NumberSetting(this.getOwner(), "C05-Y", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05 && !c05OnlyPlayerPos.getValue());
    private final NumberSetting c05Z = new NumberSetting(this.getOwner(), "C05-Z", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05 && !c05OnlyPlayerPos.getValue());
    private final BooleanSetting c05OnlyPlayerLook = new BooleanSetting(this.getOwner(), "C05 Only Player Look", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05);
    private final NumberSetting c05Yaw = new NumberSetting(this.getOwner(), "C05-Yaw", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05 && !c05OnlyPlayerLook.getValue());
    private final NumberSetting c05Pitch = new NumberSetting(this.getOwner(), "C05-Pitch", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05 && !c05OnlyPlayerLook.getValue());
    private final BooleanSetting c05PlayerOnGround = new BooleanSetting(this.getOwner(), "C05 Player On Ground", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05);
    private final BooleanSetting c05OnGround = new BooleanSetting(this.getOwner(), "C05-OnGround", false,
            () -> packetsToModify.isSelected("C03")  && c03PacketTypeEnumSetting.getValue() == C03PacketType.C05 && !c05PlayerOnGround.getValue());
    //c06 x/y/z settings
    private final BooleanSetting c06OnlyPlayerPos = new BooleanSetting(this.getOwner(), "C06 Only Player Pos", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06);
    private final NumberSetting c06X = new NumberSetting(this.getOwner(), "C06-X", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06 && !c06OnlyPlayerPos.getValue());
    private final NumberSetting c06Y = new NumberSetting(this.getOwner(), "C06-Y", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06 && !c06OnlyPlayerPos.getValue());
    private final NumberSetting c06Z = new NumberSetting(this.getOwner(), "C06-Z", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06 && !c06OnlyPlayerPos.getValue());
    private final BooleanSetting c06OnlyPlayerLook = new BooleanSetting(this.getOwner(), "C06 Only Player Look", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06);
    private final NumberSetting c06Yaw = new NumberSetting(this.getOwner(), "C06-Yaw", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06 && !c06OnlyPlayerLook.getValue());
    private final NumberSetting c06Pitch = new NumberSetting(this.getOwner(), "C06-Pitch", 0, -1000, 1000, 0.0001,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06 && !c06OnlyPlayerLook.getValue());
    private final BooleanSetting c06PlayerOnGround = new BooleanSetting(this.getOwner(), "C06 Player On Ground", true,
            () -> packetsToModify.isSelected("C03") && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06);
    private final BooleanSetting c06OnGround = new BooleanSetting(this.getOwner(), "C06-OnGround", false,
            () -> packetsToModify.isSelected("C03")  && c03PacketTypeEnumSetting.getValue() == C03PacketType.C06 && !c06PlayerOnGround.getValue());
    
    
    public ModifyPacketModifier(Module owner, String name) {
        super(owner, name);
        packetsToModify.setVisible(() -> packetModifier.mode.getValue() == this);
    }

    @EventHandler
    public void test(PacketEvent event){
        if(event.getPacket() instanceof C00PacketKeepAlive && packetsToModify.isSelected("C00")){
            C00PacketKeepAlive c00 = event.getPacket();
            c00.key = c00Key.getValue().intValue();
        }

        if(event.getPacket() instanceof C0FPacketConfirmTransaction && packetsToModify.isSelected("C0F")){
            C0FPacketConfirmTransaction c0f = event.getPacket();
            c0f.windowId = c0fWindowID.getValue().intValue();
            c0f.uid = c0fUid.getValue().shortValue();
            c0f.accepted = c0fAccepted.getValue();
        }

        if(packetsToModify.isSelected("C03")) {
            switch (c03PacketTypeEnumSetting.getValue()) {
                case C03: {
                    if(event.getPacket() instanceof C03PacketPlayer && c03PacketsToModify.isSelected("C03")) {
                        C03PacketPlayer c03 = event.getPacket();
                        if (!c03OnlyPlayerPos.getValue()) {
                            c03.x = c03X.getValue();
                            c03.y = c03Y.getValue();
                            c03.z = c03Z.getValue();
                        }

                        if (!c03OnlyPlayerLook.getValue()) {
                            c03.setYaw(c03Yaw.getValue().floatValue());
                            c03.setPitch(c03Pitch.getValue().floatValue());
                        }

                        if (!c03PlayerOnGround.getValue())
                            c03.setOnGround(c03OnGround.getValue());
                    }
                    break;
                }
                case C04:{
                    if(event.getPacket() instanceof C03PacketPlayer.C04PacketPlayerPosition && c03PacketsToModify.isSelected("C04")) {
                        C03PacketPlayer.C04PacketPlayerPosition c04 = event.getPacket();
                        if (!c04OnlyPlayerPos.getValue()) {
                            c04.x = c04X.getValue();
                            c04.y = c04Y.getValue();
                            c04.z = c04Z.getValue();
                        }

                        if (!c04OnlyPlayerLook.getValue()) {
                            c04.setYaw(c04Yaw.getValue().floatValue());
                            c04.setPitch(c04Pitch.getValue().floatValue());
                        }

                        if (!c04PlayerOnGround.getValue())
                            c04.setOnGround(c04OnGround.getValue());
                    }
                    break;
                }
                case C05:{
                    if(event.getPacket() instanceof C03PacketPlayer.C05PacketPlayerLook && c03PacketsToModify.isSelected("C05")) {
                        C03PacketPlayer.C05PacketPlayerLook c05 = event.getPacket();
                        if (!c05OnlyPlayerPos.getValue()) {
                            c05.x = c05X.getValue();
                            c05.y = c05Y.getValue();
                            c05.z = c05Z.getValue();
                        }

                        if (!c05OnlyPlayerLook.getValue()) {
                            c05.setYaw(c05Yaw.getValue().floatValue());
                            c05.setPitch(c05Pitch.getValue().floatValue());
                        }

                        if (!c05PlayerOnGround.getValue())
                            c05.setOnGround(c05OnGround.getValue());
                    }
                    break;
                }
                case C06:{
                    if(event.getPacket() instanceof C03PacketPlayer.C06PacketPlayerPosLook && c03PacketsToModify.isSelected("C06")) {
                        C03PacketPlayer.C06PacketPlayerPosLook c06 = event.getPacket();
                        if (!c06OnlyPlayerPos.getValue()) {
                            c06.x = c06X.getValue();
                            c06.y = c06Y.getValue();
                            c06.z = c06Z.getValue();
                        }

                        if (!c06OnlyPlayerLook.getValue()) {
                            c06.setYaw(c06Yaw.getValue().floatValue());
                            c06.setPitch(c06Pitch.getValue().floatValue());
                        }

                        if (!c06PlayerOnGround.getValue())
                            c06.setOnGround(c06OnGround.getValue());
                    }
                    break;
                }
            }
        }
    }

    @AllArgsConstructor
    private enum C03PacketType implements INameable {
        C03("C03"),
        C04("C04"),
        C05("C05"),
        C06("C06");

        private final String modeName;

        @Override
        public String getName() {
            return modeName;
        }
    }

    private ArrayList<MultiBoolean> modifiedPackets(){
        return Lists.newArrayList(
                new MultiBoolean(this.getOwner(), "C00", false),
                new MultiBoolean(this.getOwner(), "C0F", false),
                new MultiBoolean(this.getOwner(), "C03", false),
                new MultiBoolean(this.getOwner(), "C04", false),
                new MultiBoolean(this.getOwner(), "C05", false),
                new MultiBoolean(this.getOwner(), "C06", false),
                new MultiBoolean(this.getOwner(), "C0B", false),
                new MultiBoolean(this.getOwner(), "C0C", false),
                new MultiBoolean(this.getOwner(), "C0A", false),
                new MultiBoolean(this.getOwner(), "C02", false),
                new MultiBoolean(this.getOwner(), "C13", false),
                new MultiBoolean(this.getOwner(), "C17", false),
                new MultiBoolean(this.getOwner(), "C19", false)
        );
    }

    private ArrayList<MultiBoolean> c03Packets(){
        return Lists.newArrayList(
                new MultiBoolean(this.getOwner(), "C03", false),
                new MultiBoolean(this.getOwner(), "C04", false),
                new MultiBoolean(this.getOwner(), "C05", false),
                new MultiBoolean(this.getOwner(), "C06", false)
        );
    }
}
