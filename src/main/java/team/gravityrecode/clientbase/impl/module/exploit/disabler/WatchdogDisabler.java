package team.gravityrecode.clientbase.impl.module.exploit.disabler;

import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S01PacketJoinGame;
import team.gravityrecode.clientbase.api.eventBus.EventHandler;
import team.gravityrecode.clientbase.api.moduleBase.Module;
import team.gravityrecode.clientbase.impl.event.networking.PacketEvent;
import team.gravityrecode.clientbase.impl.event.player.PlayerTeleportEvent;
import team.gravityrecode.clientbase.impl.event.player.TickEvnet;
import team.gravityrecode.clientbase.impl.property.mode.Mode;
import team.gravityrecode.clientbase.impl.util.client.TimerUtil;
import team.gravityrecode.clientbase.impl.util.network.PacketUtil;

import java.util.concurrent.ConcurrentLinkedQueue;

public class WatchdogDisabler extends Mode {
    private final ConcurrentLinkedQueue<Packet<?>> transactions = new ConcurrentLinkedQueue();
    private final TimerUtil timerUtil = new TimerUtil();
    private boolean canC04Spam;

    public WatchdogDisabler(Module owner, String name) {
        super(owner, name);
    }

    @Override
    public void onEnable() {
        super.onEnable();
        transactions.clear();
        canC04Spam = false;
        timerUtil.reset();
    }

    @EventHandler
    public void a(PlayerTeleportEvent event){
        if(mc.thePlayer.getDistanceToPos(event.getPosition()) <= 8)
            canC04Spam = true;

        event.trySafeReject(0, mc.thePlayer.ticksExisted < 100 ? 1 : 0);
    }

    @EventHandler
    public void e(PacketEvent event) {
        if(event.getPacket() instanceof S01PacketJoinGame){
            transactions.clear();
            timerUtil.reset();
        }

        if(event.getPacket() instanceof C03PacketPlayer){
            C03PacketPlayer c03 = event.getPacket();

//            //fucking aids asf code
//            if(mc.thePlayer.ticksExisted < 100){
//                int i = 0;
//                while(i < 10){
//                    PacketUtil.sendPacketNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + 1e-6, mc.thePlayer.posZ, false));
//                    i++;
//                }
//
//                if(canC04Spam)
//                    event.cancelEvent();
//
//                return;
//            }

            if(!c03.isMoving() && !mc.thePlayer.isUsingItem())
                event.setCancelled(true);
        }
    }
}
