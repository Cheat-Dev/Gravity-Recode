package team.gravityrecode.clientbase.impl.module.exploit.disabler;

import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S01PacketJoinGame;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import team.gravityrecode.clientbase.api.eventBus.EventHandler;
import team.gravityrecode.clientbase.api.moduleBase.Module;
import team.gravityrecode.clientbase.impl.event.networking.PacketEvent;
import team.gravityrecode.clientbase.impl.event.player.PlayerMotionEvent;
import team.gravityrecode.clientbase.impl.property.mode.Mode;
import team.gravityrecode.clientbase.impl.util.util.Position;
import team.gravityrecode.clientbase.impl.util.util.network.PacketUtil;
import team.gravityrecode.clientbase.impl.util.util.player.MovementUtil;

public class WatchdogDisabler extends Mode {
    private int packetCounter;

    public WatchdogDisabler(Module owner, String name) {
        super(owner, name);
    }

    @Override
    public void onEnable() {
        super.onEnable();
        packetCounter = 0;
    }

    @EventHandler
    public void a(PlayerMotionEvent event){
    }

    @EventHandler
    public void e(PacketEvent event) {
        if (event.getPacket() instanceof S01PacketJoinGame) {
            this.packetCounter = 0;
        }

        if(event.getPacket() instanceof S08PacketPlayerPosLook){
            S08PacketPlayerPosLook s08 = event.getPacket();
            Position position = new Position(s08.getX(), s08.getY(), s08.getZ());
            if(mc.thePlayer.ticksExisted <= 35 && mc.thePlayer.getDistance(position.getPosX(), position.getPosY(), position.getPosZ()) <= 10){
                event.setCancelled(true);
            }
            if(packetCounter == 0){
                PacketUtil.sendPacketNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(position.getPosX(), position.getPosY() + Math.random() / 1250 +
                        Math.random() / 750, position.getPosZ(), false));
                packetCounter = 1;
            }else if(mc.thePlayer.ticksExisted > 35){
                PacketUtil.sendPacketNoEvent((new C03PacketPlayer.C04PacketPlayerPosition(position.getPosX(), position.getPosY(),
                        position.getPosZ(), false)));
                mc.thePlayer.setPosition(position.getPosX(), position.getPosY(), position.getPosZ());
                mc.thePlayer.motionY = -0.0784;
            }
        }


        if (event.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer c03 = event.getPacket();
            if (!(c03.isMoving()) && (!mc.thePlayer.isSwingInProgress || !mc.thePlayer.isUsingItem()) && !c03.getRotating()) {
                event.setCancelled(true);
            }
        }
    }
}
